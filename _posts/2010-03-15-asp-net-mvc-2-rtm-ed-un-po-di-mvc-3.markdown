---
layout: post
status: publish
published: true
title: ASP.NET MVC 2 RTM ed un po’ di MVC 3 :)
author: imperugo
author_login: imperugo
author_email: imperugo@gmail.com
wordpress_id: 1513
wordpress_url: http://imperugo.tostring.it/blog/post/aspnet-mvc-2-rtm-ed-po-di-mvc-3/
date: 2010-03-15 16:30:00.000000000 +00:00
categories:
- ASP.NET
tags:
- MVC
- News
- ASP.NET
comments: true
---
<p>Finalmente è stata rilasciata la </a>versione definitiva di <a title="ASP.NET MVC" href="http://imperugo.tostring.it/Categories/Archive/MVC" target="_blank">ASP.NET MVC</a> 2. Il download è disponibile <a title="ASP.NET MVC 2.0 Download" href="http://www.microsoft.com/downloads/details.aspx?FamilyID=c9ba1fe1-3ba8-439a-9e21-def90a8615a9&amp;displaylang=en" rel="nofollow" target="_blank">qui</a> e soltanto per <a title="Search Visual Studio" href="http://imperugo.tostring.it/blog/search?q=Visual+Studio&amp;searchButton=Go" target="_blank">Visual Studio</a> 2008 (di fatto Visual Studio 2010 integrerà già in sé la versione 2 di <a title="ASP.NET" href="http://imperugo.tostring.it/categories/archive/ASP.NET" target="_blank">ASP.NET</a> MVC).     <br />Ovviamente non ci sono novità di rilievo in quanto la RC2 era già features complete. Ciò su cui si è sicuramente lavorato sono le performances, la stabilità ed un po’ di bugfixinig.</p>  <p>Ovviamente è appena stata rilasciata la versione 2 e già si parla della versione 3, infatti a questo <a title="ASPNET MVC 3 RoadMap" href="http://aspnet.codeplex.com/wikipage?title=Road%20Map&amp;referringTitle=MVC" rel="nofollow" target="_blank">indirizzo</a> potete trovare la roadmap della prossima release, che riporto qui di seguito:</p>  <p>&#160;</p>  <blockquote>   <p>Now that ASP.NET MVC 2 is released, it's time to start planning for ASP.NET MVC 3. This roadmap will be updated with more information as we get further in our planning process.      <br />Here is a list of some of the high-level areas of focus we're looking at.</p>    <ul>     <li><b>Productivity</b> - ASP.NET MVC 3 should provide ways to make application developers more productive when building web applications.         <ul>         <li><b>Tasked based helpers</b> - These helpers focus on tasks that commonly come up when building web applications such as adding a CAPTCHA to a site or providing a sortable, pageable grid of data. </li>          <li><b>Validation Improvements</b> - Support for more validation attributes such as the new ones introduced in ASP.NET 4 as well as possibly a few new ones such as an email validation attribute. </li>          <li><b>View Engine Options</b> - We're experimenting with a new streamlined view engine syntax as well as making it easier to pull in community view engines such as Spark into a project. </li>          <li><b>Command line tools</b> - As we add new tooling for ASP.NET MVC to Visual Studio, we will look at providing command line alternatives for the same functionality </li>       </ul>     </li>   </ul>    <ul>     <li><b>Ajax</b> - Modern applications make use of Ajax to provide a rich experience for their users. ASP.NET MVC 3 should make building such applications much easier.         <ul>         <li><b>More Ajax helpers</b> - New Ajax helpers may leverage libraries such as jQuery UI to provide widgets such as a calendar date picker, autocomplete, etc. </li>          <li><b>Multiple Partial Updates</b> - The existing Ajax helpers, such as <i>Ajax.BeginForm</i> and <i>Ajax.ActionLink</i>, only update one element in the page when receiving a partial view from an action method. Support for multiple partial updates would allow the Ajax helpers to receive multiple partial views and update multiple sections of the page with those views. </li>          <li><b>Client Templates Support</b> - Client templates enable you to format and display a single data item or set of data items by using a fragment of HTML. ASP.NET MVC 3 may provide the ability to connect client templates easily with an action method which returns and receives JSON data. </li>       </ul>     </li>   </ul>    <ul>     <li><b>Architecture</b> - ASP.NET MVC 3 should contain architectural improvements which provide benefits such as improved extensibility that enables developers to more easily bend the framework to their will.         <ul>         <li><b>Dependency Injection at all levels</b> - We're looking at opening up more seams for applying the dependency injection when instantiating components of the framework. This would allow developers to hook into the creation of models during model binding, action filters, etc. </li>          <li><b>MEF Controller Factory</b> - MEF is a new library in .NET for building applications that can be incrementally extended without requiring modification. Enabling MEF by default within the default controller factory would allow for extensibility scenarios out of the box, while still allowing for 3rd party dependency injection frameworks to be used as alternatives to MEF. </li>          <li><b>Application scaffolding</b> - Scaffolding allows for quickly implementing simple Create, Read, Update, Delete pages against a model which provide a nice starting point for quickly getting data into an application during development. </li>       </ul>     </li>   </ul>    <ul>     <li><b>Performance</b> - As always, we're looking at ways to make ASP.NET MVC 3 blazingly fast.         <ul>         <li><b>Improved Caching Support</b> - Enable caching of an child action when called via the RenderAction method. Also looking at donut caching and donut hole caching. </li>          <li><b>More Control Over Session</b> - Support for granular session state as well as turning session state on and off on a per action/controller basis. </li>       </ul>     </li>   </ul> </blockquote>  <p>&#160;</p>  <p>Buon download.</p>
