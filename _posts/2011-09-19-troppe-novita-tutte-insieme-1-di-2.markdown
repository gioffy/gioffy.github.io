---
layout: post
status: publish
published: true
title: Troppe novità tutte insieme (1 di 2)
author: imperugo
author_login: imperugo
author_email: imperugo@gmail.com
wordpress_id: 1433
wordpress_url: http://imperugo.tostring.it/blog/post/troppe-novita-tutte-insieme-1-di-2/
date: 2011-09-19 17:16:17.000000000 +01:00
categories:
- Eventi
tags:
- News
- Javascript
- HTML5
- Eventi
- Build
- C#
comments: true
---
<p><a href="http://tostring.it/UserFiles/imperugo/build_logo_2.png"><img style="background-image: none; border-right-width: 0px; margin: 0px 7px 2px 0px; padding-left: 0px; padding-right: 0px; display: inline; float: left; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="build_logo" border="0" alt="build_logo" align="left" src="http://tostring.it/UserFiles/imperugo/build_logo_thumb.png" width="240" height="86" /></a>Che il <a title="BUILD conference highlights" href="http://www.buildwindows.com/" rel="nofollow" target="_blank">//build</a> fosse una conferenza dalle grandi novità ce lo aspettavamo un po’ tutti, ma che oltre a Windows 8 fossero mostrate tutte le next release dei principali tool e framework mi ha lasciato un po’ spiazzato; talmente spiazzato che questo post esce in ritardo rispetto a molti blogger in quanto ho dovuto metabolizzare tantissime informazioni J.</p>  <p>In ogni caso procediamo con ordine e vediamo tutte le novità lato dev che ci riguardano:</p>  <h3>Retrocompatibilità</h3>  <p>Steven Sinofsky durante la keynote ha dichiarato che tutte le applicazioni funzionanti in Windows 7 saranno funzionanti anche nella prossima release del sistema operativo. Questo vuol dire che, nonostante le importanti novità che elencherò di seguito, non dobbiamo allarmarci J.</p>  <h3>Metro UI, Store ed altre novità</h3>  <p>Sicuramente come news principale c’è la nuova Metro UI, ossia una nuova interfaccia inizialmente pensata per il mondo touch, ma poi effettivamente utilizzabile anche da chi come me non ha un device touch. A dimostrazione, il menù start non esiste più e, premendo il pulsate cuore di Windows, si accederà direttamente alla nuova Metro UI, dove è possibile effettuare ricerche o eseguire applicazioni.    <br />Inizialmente questo nuovo comportamento può lasciare l’utente un po’ spiazzato ma poi, una volta abituatisi, risulta molto comodo e pratico.</p>  <p><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://tostring.it/UserFiles/imperugo/image_3_4.png" width="644" height="363" /></p>  <p>Oltre ad essere molto reattiva, la parte Metro si può “unire” al classico desktop creando così un’ibrido dove, sulla parte sinistra possiamo tenere un’applicazione Metro Style e dall’altra una comunissima applicazione o il desktop stesso. Oltre a ciò è possibile “pinnare” sulla Welcome Page (e quindi la Metro UI) un po’ tutto, da applicazioni Metro a Visual Studio, un po’ come avviene per Windows Phone.</p>  <p>Per quanto riguarda la parte desktop, rimane (per ora) un po’ tutto come prima, ci sono alcune novità ma diciamo pure che l’habitué Windows non si troverà spiazzato.</p>  <p>Oltre alle novità legate alla UI, ne sono state mostrate parecchie altre: lo <b>Store App</b> (non ancora disponibile se si installa Win8), il <b>Sync dei Settings</b> (sfruttando Windows Live si avranno a disposizione le stesse cose per i differenti device, tablet, pc, phone, etc), <b>Hyper-V</b> direttamente nel sistema operativo, <b>mount delle iso</b> (stile Daemon Tool per intenderci), <b>supporto al multi-monitor migliorato</b>, <b>controllo ortografico</b> su tutto il sistema operativo, un <b>minor consumo della ram</b> (circa il 20% in meno rispetto a Windows 7), <b>un avvio in pochi secondi</b> (dai 4 agli 8 a seconda dell’hardware), un nuovo <b>task-manager</b> e, grazie ad una sorta di hibernate delle applicazioni (zero cicli di clock ma l’applicazione rimane aperta) sembra che la durata della batteria sia migliorata.</p>  <h3>Sviluppo.</h3>  <p>Con Windows 8 è stato introdotto un nuovo stack chiamato Metro Style che, come è facilmente intuibile dal nome, serve a realizzare applicazioni per la UI Metro. Ovviamente, per garantire la retro compatibilità sopra citata, il classico stack Win32/.NET rimane, ma non sarà possibile realizzare un’applicazione che utilizzi entrambi gli stack. Questo vuol dire che se si vogliono coprire entrambi gli scenari, Metro e Win32, è necessario realizzare due applicazioni.</p>  <h3>C/C++, XAML, C#, VB, HTML, Javascript</h3>  <p>Chi più ne ha più ne metta! Sono questi i Framework/linguaggi che si possono utilizzare oggi per sviluppare applicazioni metro style, e tutti fanno capo ad un “sotto strato” chiamato WinRT (Windows Runtime) che altro non è che un set di API verso il kernel di Windows.    <br />La slide seguente mostra un po’ più nel dettaglio come è strutturato lo sviluppo in Windows 8.</p>  <p><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://tostring.it/UserFiles/imperugo/image_6_2.png" width="644" height="433" /></p>  <p>Come potete vedere, lo XAML ora non è più parte del .NET Framework ma è presente direttamente nel sistema operativo, offrendone così la possibilità di utilizzo anche da linguaggi unmanaged come il C, o il C++.</p>  <p>Un’altra novità che mi ha colpito in questa slide è l’assenza di Silverlight per lo sviluppo di applicazioni Metro Style, rilegandolo così nell’angolino in basso a destra.</p>  <h3>HTML + Javascript</h3>  <p>   <br />Direi che è il vero protagonista (devside)! Di fatto ha molto più spazio ed importanza rispetto a Silverlight e apre nuove opportunità a tutti gli sviluppatori di frontend (HTML/Javascript). Ad oggi conosco diversi sviluppatori di frontend che, dopo la presentazione di Windows 8, si sono dimostrati interessati a sviluppare applicazioni per Windows.</p>  <h3>Quale linguaggio scegliere?</h3>  <p>   <br />Beh difficile dirlo. In primis lo skill la fa da padrone. Se si è abituati a scrivere solo codice C# (non tutta la BCL è disponibile per le Metro Apps) e non si conosce il Javascript, la risposta vien da sola J.     <br />Personalmente vedo una grande crescita del C++ nello sviluppo di applicazioni Windows e, volendo azzardare un po’, scegliere il Javascript+HTML5 per applicazioni che non necessitano di performance o calcoli troppo complessi, ed il C++ per le applicazioni in cui la velocità è il primo pillar, può essere la scelta giusta.     <br />Un altro vantaggio del C++ e della coppia HTML+JS è la non necessità del .NET Framework. Questo offre vantaggi in fase di deploy e dipendenze.</p>  <h3>WinRT </h3>  <p>Sopra ho accennato di cosa si tratta, ma è giusto approfondire un po’, riportando alcuni punti scritti da <a title="Raffaele Rialdi&#39;blog" href="http://blogs.ugidotnet.org/raffaele" rel="nofollow" target="_blank">SuperRaf</a> in questo <a href="http://blogs.ugidotnet.org/raffaele/archive/2011/09/15/deep-diving-su-winrt-e-le-applicazioni-metro-di-windows.aspx" target="_blank">post</a>.</p>  <ul>   <ul></ul>    <li>     <p>È il Windows Runtime che espone le funzionalità del sistema operativo in modo Object Oriented.</p>   </li>    <li>     <p>Non è codice managed e non necessita del .NET Framework. (Javascript, HTML, C e C++ non lo richiedono)</p>   </li>    <li>     <p>Ha delle &quot;Projection&quot; che permettono ai vari linguaggi di interagire con il sistema operativo (C++, C#, VB.Net, Javascript)</p>   </li>    <li>     <p>I linguaggi managed sopra WinRT hanno sempre bisogno del CLR e il Framework fornito con Win8 è la versione 4.5 </p>   </li>    <li>     <p>WinRT è costruito con tecnologia COM e conserva tutti i relativi meccanismi (IUnknown, AddRef/Release, Apartment per i modelli di threading, la message pump per gestire le STA).</p>   </li>    <li>     <p>È possibile estenderlo, ma solo per una singola applicazione e quindi non condivisibile.</p>   </li>    <li>     <p>Il versioning di WinRT è basato sui concetti COM e prevede le estensioni che verranno nelle future versioni del sistema operativo</p>   </li> </ul>  <h3>Domande, dubbi e perplessità:</h3>  <ul>   <li>Ma WPF che fine ha fatto? </li>    <li>Perché Silverlight è stato escluso dalla parte Metro UI? </li>    <li>Il .NET non la fa più da protagonista come prima? </li> </ul>  <p>Un grande passo in avanti e veramente tante novità...non saprei da dove partire! Anzi si, dal download disponibile qui e dalle sessioni <a href="http://tostring.it/blog/post/scaricare-tutti-i-video-delle-sessioni-del-build/" target="_blank">qui</a>.</p>
